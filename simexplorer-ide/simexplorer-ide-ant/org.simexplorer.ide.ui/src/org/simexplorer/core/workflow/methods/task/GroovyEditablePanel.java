/*
 *  Copyright (c) 2008, Cemagref
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License as
 *  published by the Free Software Foundation; either version 3 of
 *  the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
 *  MA  02110-1301  USA
 */
package org.simexplorer.core.workflow.methods.task;

import java.io.File;
import java.util.HashMap;
import java.util.Map;
import org.openide.util.Exceptions;
import org.openmole.commons.exception.InternalProcessingError;
import org.openmole.commons.exception.UserBadDataError;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.event.UndoableEditListener;
import org.openide.util.lookup.ServiceProvider;
import org.openide.windows.WindowManager;
import org.simexplorer.ide.ui.tools.ActionsUtils;
import org.openmole.plugin.task.groovy.GroovyTask;
import org.simexplorer.core.workflow.methods.EditorPanel;

@ServiceProvider(service=EditorPanel.class)
public class GroovyEditablePanel extends EditorPanel<GroovyTask> {

    private DefaultListModel listModel;
    private Map<String, File> jarsAdded;

    public GroovyEditablePanel() {
        this(GroovyTask.class);
    }

    public GroovyEditablePanel(Class<? extends GroovyTask>... typesEditable) {
        super(typesEditable);
        listModel = new DefaultListModel();
        jarsAdded = new HashMap<String, File>();
        initComponents();
    }

    @Override
    public void addUndoableEditListener(UndoableEditListener listener) {
        textEditor.getDocument().addUndoableEditListener(listener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        textEditor = new javax.swing.JTextPane();
        jButton3 = new javax.swing.JButton();

        list.setModel(listModel);
        jScrollPane2.setViewportView(list);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddJarActionPerformed(evt);
            }
        });

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveJarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(12, 12, 12)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addContainerGap())
        );

        textEditor.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textEditorCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(textEditor);

        jButton3.setText("Jars");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(jButton3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textEditorCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_textEditorCaretUpdate
// TF only done one time with apply change
/*        try {
            getObjectEdited().setCode(textEditor.getText());
        } catch (UserBadDataError ex) {
            Exceptions.printStackTrace(ex);
        } catch (InternalProcessingError ex) {
            Exceptions.printStackTrace(ex);
        }
 */
    }//GEN-LAST:event_textEditorCaretUpdate

    private void AddJarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddJarActionPerformed
        JFileChooser jfc = ActionsUtils.getJFileChooser("Add a Jar", null);
        if (jfc.showSaveDialog(WindowManager.getDefault().getMainWindow()) == JFileChooser.APPROVE_OPTION) {
            File absoluteFile = jfc.getSelectedFile().getAbsoluteFile();
            listModel.addElement(absoluteFile.getAbsolutePath());
            list.repaint();
            jarsAdded.put(absoluteFile.getAbsolutePath(), absoluteFile);
        }
    }//GEN-LAST:event_AddJarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JDialog dialog = new JDialog(WindowManager.getDefault().getMainWindow());
        dialog.setContentPane(jPanel1);
        dialog.pack();
        dialog.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void RemoveJarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveJarActionPerformed
        String selected = (String) list.getSelectedValue();
        File file = jarsAdded.get(selected);
        jarsAdded.remove(selected);
        listModel.removeElement(selected);
    }//GEN-LAST:event_RemoveJarActionPerformed

    @Override
    public void setObjectEdited(GroovyTask method) {
        super.setObjectEdited(method);
        try {
            this.textEditor.setText(method.getCode());
        } catch (UserBadDataError ex) {
            Exceptions.printStackTrace(ex);
        } catch (InternalProcessingError ex) {
            Exceptions.printStackTrace(ex);
        }
            // FIXME need to modify the CodeTask api to be able to get the libraries files
/*        for (File jar : getObjectEdited().getLocalJarList()) {
        listModel.addElement(jar);
        jarsAdded.put(absolutePath, getObjectEdited().addJar(absolutePath));
        }
 */
    }

    @Override
    public void applyChanges() {
        super.applyChanges();
        try {
            getObjectEdited().setCode(textEditor.getText());
        } catch (UserBadDataError ex) {
            Exceptions.printStackTrace(ex);
        } catch (InternalProcessingError ex) {
            Exceptions.printStackTrace(ex);
        }
        for (File file:jarsAdded.values()) getObjectEdited().addLib(file);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList list;
    private javax.swing.JTextPane textEditor;
    // End of variables declaration//GEN-END:variables
}
