/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CsvOutputImporterDialog.java
 *
 * Created on 16 juin 2009, 11:16:57
 */

package org.simexplorer.core.workflow.methods.io;

import au.com.bytecode.opencsv.CSVReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.openide.util.Exceptions;
import org.openmole.core.structuregenerator.ComplexNode;
import org.openmole.core.structuregenerator.PrototypeNode;
import org.openmole.core.workflow.implementation.data.Prototype;
import org.simexplorer.ide.ui.dataexplorer.structure.InputStructureTopComponent;
import org.simexplorer.ide.ui.dataexplorer.structure.OutputStructureTopComponent;
import org.simexplorer.ide.ui.tools.ActionsUtils;

/**
 *
 * @author thierry
 */
public class CsvOutputImporterDialog extends javax.swing.JDialog {
    private File csvFileToImport = null;
    private DefaultTableModel tableModel;
    private char[] fieldSeparatorsChar = new char[]{'\t', ';', ','};
    private static final String FIELD_SEPARATOR_OTHER = "Other";
    private char fieldSeparatorCharSelected;
    private String[] fieldSeparatorsName = new String[]{"Tabulation", "Semicolon", "Comma", FIELD_SEPARATOR_OTHER};

    private String structureName;
    private ComplexNode complexNode;

    /** Creates new form CsvOutputImporterDialog */
    public CsvOutputImporterDialog(java.awt.Frame parent, boolean modal,ComplexNode complexNode1) {
//    public CsvOutputImporterDialog(java.awt.Frame parent, boolean modal,String structureName) {
        super(parent, modal);
        initComponents();
        tableModel = (DefaultTableModel) jTable1.getModel();
        fieldSeparatorComboBox.setSelectedIndex(-1);
        this.setTitle("Import from a CSV file");
        fieldSeparatorComboBox.setEnabled(false);
        this.complexNode=complexNode1;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fieldSeparatorTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        csvImporterOkButton1 = new javax.swing.JButton();
        csvImporterCancelButton1 = new javax.swing.JButton();
        fieldSeparatorComboBox = new javax.swing.JComboBox();
        loadButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        fieldSeparatorTextField.setEnabled(false);
        fieldSeparatorTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                fieldSeparatorModified(evt);
            }
        });

        jLabel5.setText(org.openide.util.NbBundle.getMessage(CsvOutputImporterDialog.class, "CsvOutputImporterDialog.jLabel5.text")); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Import"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        csvImporterOkButton1.setText(org.openide.util.NbBundle.getMessage(CsvOutputImporterDialog.class, "CsvOutputImporterDialog.csvImporterOkButton1.text")); // NOI18N
        csvImporterOkButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvImporterOkButton1ActionPerformed(evt);
            }
        });

        csvImporterCancelButton1.setText(org.openide.util.NbBundle.getMessage(CsvOutputImporterDialog.class, "CsvOutputImporterDialog.csvImporterCancelButton1.text")); // NOI18N
        csvImporterCancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvImporterCancelButton1ActionPerformed(evt);
            }
        });

        fieldSeparatorComboBox.setModel(new DefaultComboBoxModel(fieldSeparatorsName));
        fieldSeparatorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldSeparatorComboBoxActionPerformed(evt);
            }
        });

        loadButton.setText(org.openide.util.NbBundle.getMessage(CsvOutputImporterDialog.class, "CsvOutputImporterDialog.loadButton.text")); // NOI18N
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        helpButton.setText(org.openide.util.NbBundle.getMessage(CsvOutputImporterDialog.class, "CsvOutputImporterDialog.helpButton.text")); // NOI18N
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldSeparatorComboBox, 0, 131, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldSeparatorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(helpButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                        .addComponent(csvImporterOkButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(csvImporterCancelButton1))
                    .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(loadButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(fieldSeparatorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldSeparatorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(csvImporterCancelButton1)
                    .addComponent(csvImporterOkButton1)
                    .addComponent(helpButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 461, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private boolean isVariableToImport(int row) {
        return (Boolean) tableModel.getValueAt(row,2);
    }

    private void csvImporterOkButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvImporterOkButton1ActionPerformed
        // import structure elements
        // get the rigth structure
        // TODO not clean find a better way to do that
/*        ComplexNode outputStructure = null;
        if (structureName.equalsIgnoreCase("outputStructure")){
            outputStructure = ApplicationsTopComponent.findInstance().getExplorationApplication().getExplorationLoop().getOutputDataStructure();
        }
        else if (structureName.equalsIgnoreCase("inputStructure")){
            outputStructure = ApplicationsTopComponent.findInstance().getExplorationApplication().getExplorationLoop().getInputDataStructure();
        }
  */
        complexNode.clear();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            if (isVariableToImport(i)) {
                String name = (String) tableModel.getValueAt(i, 0);
                // TODO fix that?
                //name = VerifyName.removeIncorrectChars(name);
                Prototype prototype = new Prototype(name, (Class) tableModel.getValueAt(i, 1));
//                outputStructure.add(prototype);
                complexNode.add(new PrototypeNode(prototype));
            }
        }
        OutputStructureTopComponent.findInstance().applicationUpdated();
        InputStructureTopComponent.findInstance().applicationUpdated();
        dispose();
}//GEN-LAST:event_csvImporterOkButton1ActionPerformed

    private void csvImporterCancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvImporterCancelButton1ActionPerformed
        clearDataTable();
        dispose();
    }//GEN-LAST:event_csvImporterCancelButton1ActionPerformed

    private void fieldSeparatorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldSeparatorComboBoxActionPerformed
            fieldSeparatorModified(null);
        if (fieldSeparatorComboBox.getSelectedItem() == FIELD_SEPARATOR_OTHER) {
            fieldSeparatorTextField.setEnabled(true);
//            fieldSeparatorModified(null);
        } else if (fieldSeparatorComboBox.getSelectedIndex() > -1) {
            fieldSeparatorTextField.setEnabled(false);
            setFieldSeparator(fieldSeparatorsChar[fieldSeparatorComboBox.getSelectedIndex()]);
        }
    }//GEN-LAST:event_fieldSeparatorComboBoxActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        JFileChooser fc = ActionsUtils.getJFileChooser("Browse", null);
        if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            csvFileToImport = fc.getSelectedFile();
            clearDataTable();
            fieldSeparatorComboBox.setEnabled(true);
        }
}//GEN-LAST:event_loadButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_helpButtonActionPerformed
    private void fieldSeparatorModified(javax.swing.event.CaretEvent evt) {
        clearDataTable();
        if (fieldSeparatorTextField.getText().length() > 0) {
            setFieldSeparator(fieldSeparatorTextField.getText().toCharArray()[0]);
        }
    }

    private void clearDataTable() {
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            tableModel.removeRow(i);
        }
    }


    private void setFieldSeparator(char c) {
        fieldSeparatorCharSelected = c;
        clearDataTable();
        try {
            CSVReader csvReader = new CSVReader(new FileReader(csvFileToImport), c);
            String[] headers = csvReader.readNext();
            String[] values = csvReader.readNext();
            // insert each variables in the table
            Class type;
            for (int idx = 0; idx < headers.length; idx++) {
                if (idx < values.length) {
                    if (values[idx].matches("^\\d+$")) {
                        type = Integer.class;
                    } else if (values[idx].matches("^(\\d|\\.)*$")) {
                        type = Double.class;
                    } else {
                        type = String.class;
                    }
                    tableModel.addRow(new Object[]{headers[idx], type, true});
                }
            }
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    }


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CsvOutputImporterDialog dialog = new CsvOutputImporterDialog(new javax.swing.JFrame(), true,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton csvImporterCancelButton1;
    private javax.swing.JButton csvImporterOkButton1;
    private javax.swing.JComboBox fieldSeparatorComboBox;
    private javax.swing.JTextField fieldSeparatorTextField;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton loadButton;
    // End of variables declaration//GEN-END:variables

}
