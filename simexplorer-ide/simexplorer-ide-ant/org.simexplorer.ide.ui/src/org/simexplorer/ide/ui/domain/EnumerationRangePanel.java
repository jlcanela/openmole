/*
 *  Copyright Â© 2008, 2009, Cemagref
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation; either version 3 of
 *  the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
 *  MA  02110-1301  USA
 */
package org.simexplorer.ide.ui.domain;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import org.openide.util.lookup.ServiceProvider;
import org.openmole.core.implementation.domain.EnumerationDomain;
import org.simexplorer.core.workflow.methods.DomainEditorPanel;
import org.simexplorer.core.workflow.methods.EditorPanel;

@ServiceProvider(service=EditorPanel.class)
public class EnumerationRangePanel extends DomainEditorPanel<EnumerationDomain> {

    /** Creates new form EnumerationRangePanel */
    public EnumerationRangePanel() {
        super(EnumerationDomain.class);
        initComponents();
        qualitativeValuesList.setModel(new DefaultListModel());
    }

    @Override
    public void setObjectEdited(EnumerationDomain range) {
        super.setObjectEdited(range);
        if (range != null) {
            qualitativeValuesList.setModel(new DefaultListModel());
            if ((range.size() > 0)) {
                for (Object ob : range.getRawValues()) {
                    ((DefaultListModel) qualitativeValuesList.getModel()).addElement(ob);
                }
            }
        }
    }

    @Override
    public void applyChanges() {
        // TODO return the edited values
        int size = qualitativeValuesList.getModel().getSize();
        List ob = new ArrayList(size);
        for (int i = 0; i < size; i++) {
            ob.add(qualitativeValuesList.getModel().getElementAt(i));
        }
        EnumerationDomain en = new EnumerationDomain(ob);
        super.setObjectEdited(en);

    }

    @Override
    public String isInputValid() {
        String st = null;
        if (qualitativeValuesList.getModel().getSize() == 0) {
            st = "Need to have values in enumeration";
        }
        return st;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        qualitativePanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        qualitativeValuesList = new javax.swing.JList();
        qualititativeValueTextField = new javax.swing.JTextField();
        jButtonAddQualitative = new javax.swing.JButton();
        jButtonRemoveSelectedItem = new javax.swing.JButton();

        jLabel8.setText(org.openide.util.NbBundle.getMessage(EnumerationRangePanel.class, "EnumerationRangePanel.jLabel8.text")); // NOI18N

        qualitativeValuesList.setModel(new DefaultListModel());
        qualitativeValuesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                qualitativeValuesListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(qualitativeValuesList);

        qualititativeValueTextField.setText(org.openide.util.NbBundle.getMessage(EnumerationRangePanel.class, "EnumerationRangePanel.qualititativeValueTextField.text")); // NOI18N

        jButtonAddQualitative.setText(org.openide.util.NbBundle.getMessage(EnumerationRangePanel.class, "EnumerationRangePanel.jButtonAddQualitative.text")); // NOI18N
        jButtonAddQualitative.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddQualitativeActionPerformed(evt);
            }
        });

        jButtonRemoveSelectedItem.setText(org.openide.util.NbBundle.getMessage(EnumerationRangePanel.class, "EnumerationRangePanel.jButton2.text")); // NOI18N
        jButtonRemoveSelectedItem.setEnabled(false);
        jButtonRemoveSelectedItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveSelectedItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout qualitativePanelLayout = new javax.swing.GroupLayout(qualitativePanel);
        qualitativePanel.setLayout(qualitativePanelLayout);
        qualitativePanelLayout.setHorizontalGroup(
            qualitativePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qualitativePanelLayout.createSequentialGroup()
                .addGroup(qualitativePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(qualitativePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(qualitativePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                            .addGroup(qualitativePanelLayout.createSequentialGroup()
                                .addGroup(qualitativePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(qualititativeValueTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
                                .addGap(12, 12, 12)
                                .addComponent(jButtonAddQualitative))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, qualitativePanelLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jButtonRemoveSelectedItem, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)))
                .addContainerGap())
        );
        qualitativePanelLayout.setVerticalGroup(
            qualitativePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qualitativePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(qualitativePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qualititativeValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddQualitative))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoveSelectedItem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 555, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(qualitativePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 5, Short.MAX_VALUE)
                    .addComponent(qualitativePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 5, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void qualitativeValuesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_qualitativeValuesListValueChanged
        jButtonRemoveSelectedItem.setEnabled(qualitativeValuesList.getSelectedIndex() >= 0);
}//GEN-LAST:event_qualitativeValuesListValueChanged

    private void jButtonAddQualitativeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddQualitativeActionPerformed
        if (qualititativeValueTextField.getText().length() > 0) {
            ((DefaultListModel) qualitativeValuesList.getModel()).addElement(qualititativeValueTextField.getText());
        }
        qualititativeValueTextField.setText("");
}//GEN-LAST:event_jButtonAddQualitativeActionPerformed

    private void jButtonRemoveSelectedItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveSelectedItemActionPerformed
        for (int pos:qualitativeValuesList.getSelectedIndices()) ((DefaultListModel)
                qualitativeValuesList.getModel()).removeElementAt(pos);
}//GEN-LAST:event_jButtonRemoveSelectedItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddQualitative;
    private javax.swing.JButton jButtonRemoveSelectedItem;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel qualitativePanel;
    private javax.swing.JList qualitativeValuesList;
    private javax.swing.JTextField qualititativeValueTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public Class getType() {
        return Object.class;
    }

}
