/*
 *
 *  Copyright (c) 2008, Cemagref
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation; either version 3 of
 *  the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
 *  MA  02110-1301  USA
 */
package org.simexplorer.ide.ui.dataexplorer.variables;

import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import org.openmole.core.implementation.data.Prototype;
import org.openmole.core.model.data.IPrototype;
import org.simexplorer.ui.tools.SimpleWizard;
import org.simexplorer.ui.ide.workflow.model.ExplorationApplication;
import org.simexplorer.ui.ide.workflow.model.MetadataProxy;

public class NewVariablePanel extends SimpleWizard {

    private Map<String, Class> types;
    private IPrototype variable;
    private boolean isVariableSystem;

    /** Creates new form NewVariablePanel */
    public NewVariablePanel() {
        types = new HashMap<String, Class>();
        types.put("Integer", Integer.class);
        types.put("Double", Double.class);
        types.put("String", String.class);
        types.put("Boolean", Boolean.class);
        types.put("Long", Long.class);
        types.put("Dynamic", Object.class);
        variable = new Prototype("", null);
        initComponents();
    }

    public NewVariablePanel(IPrototype variable) {
        this();
        if (variable != null) {
            this.variable = variable;
            this.isVariableSystem = ExplorationApplication.isVariableSystem(variable);
            nameTextField.setText(variable.getName());
            nameTextField.setEnabled(!this.isVariableSystem);
            typeComboBox.setEnabled(!this.isVariableSystem);
            typeComboBox.setSelectedItem(this.isVariableSystem ? null : variable.getType().getSimpleName());
            gatheringCheckBox.setSelected(ExplorationApplication.isGatheredAfterExploration(variable));

            // put the metadata field
            jTextAreaDescription.setText(MetadataProxy.getMetadata(variable, "description"));
            jTextFieldUnit.setText(MetadataProxy.getMetadata(variable, "units"));
        } else {
            typeComboBox.setSelectedItem("Dynamic");
        }
    }

    public IPrototype getVariable() {
        if (!this.isVariableSystem) {
            IPrototype old = variable;
            variable = new Prototype(nameTextField.getText(), types.get(typeComboBox.getSelectedItem()));
            MetadataProxy.setMetadata(variable, MetadataProxy.getMetadata(old));
        }
        ExplorationApplication.setGatheredAfterExploration(variable, gatheringCheckBox.isSelected());
        // get the metadata from fields
        MetadataProxy.setMetadata(variable, "description", jTextAreaDescription.getText());
        MetadataProxy.setMetadata(variable, "units", jTextFieldUnit.getText());
        return variable;
    }

    @Override
    protected String isInputValid() {
        if (this.isVariableSystem) {
            return null;
        } else if (nameTextField.getText().length() <= 0) {
            return "Variable name is not valid";
        } // TODO fix that?
        /*else if (!VerifyName.correct(nameTextField.getText())) {
        return VerifyName.ERROR_MESSAGE;
        }*/
        return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        typeComboBox = new javax.swing.JComboBox();
        gatheringCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        messageLabel = buildMessageLabel()
        ;
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jTextFieldUnit = new javax.swing.JTextField();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.jLabel2.text")); // NOI18N

        typeComboBox.setModel(new DefaultComboBoxModel(types.keySet().toArray()));

        gatheringCheckBox.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.gatheringCheckBox.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel3.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.jLabel3.text")); // NOI18N

        messageLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 13));
        messageLabel.setForeground(new java.awt.Color(236, 64, 64));
        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        messageLabel.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.messageLabel.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.jLabel4.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.jLabel5.text")); // NOI18N

        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setRows(5);
        jTextAreaDescription.setMinimumSize(new java.awt.Dimension(200, 30));
        jScrollPane1.setViewportView(jTextAreaDescription);

        jTextFieldUnit.setText(org.openide.util.NbBundle.getMessage(NewVariablePanel.class, "NewVariablePanel.jTextFieldUnit.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 432, Short.MAX_VALUE)))
                    .addComponent(gatheringCheckBox)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldUnit, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gatheringCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(37, 37, 37)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox gatheringCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldUnit;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JComboBox typeComboBox;
    // End of variables declaration//GEN-END:variables
}
