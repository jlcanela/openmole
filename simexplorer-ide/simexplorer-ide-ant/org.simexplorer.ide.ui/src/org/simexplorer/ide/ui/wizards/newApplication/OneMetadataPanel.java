/*
 *  Copyright Â© 2009, Cemagref
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation; either version 3 of
 *  the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
 *  MA  02110-1301  USA
 */
package org.simexplorer.ide.ui.wizards.newApplication;

import java.awt.Color;
import java.awt.Dimension;
import java.util.logging.Logger;

/**
 *
 * @author thierry
 */
public class OneMetadataPanel extends javax.swing.JPanel {

    boolean isLarge;
    static int num = 0;

    /** Creates new form OneMetadataPanel */
    public OneMetadataPanel(String label, String textfield, boolean isLarge, boolean isEditable) {
        num++;
        this.isLarge = isLarge;
        initComponents();
        if (isLarge) {
            this.add(jPanelTextArea);
            this.setMinimumSize(new Dimension(500, 90));
            this.setPreferredSize(new Dimension(500, 90));
            this.setMaximumSize(new Dimension(500, 90));
        } else {
            this.add(jPanelTextField);
            this.setMinimumSize(new Dimension(500, 25));
            this.setPreferredSize(new Dimension(500, 25));
            this.setMaximumSize(new Dimension(500, 25));
        }

        if (!isLarge) {
            metadataKey1.setText(label);
            metadataKey1.setEditable(isEditable);
            if (label.equalsIgnoreCase("")) {
                metadataKey1.setToolTipText("set metadata key");
            }
            metadataValue1.setText(textfield);
            metadataValue1.setToolTipText("set metadata value");
            metadataKey1.setBackground(new Color(239,235,231));
            metadataValue1.setBackground(new Color(239,235,231));
        } else {
            metadataKey2.setText(label);
            if (label.equalsIgnoreCase("")) {
                metadataKey2.setToolTipText("set metadata key");
            }
            metadataKey2.setEditable(isEditable);
            metadataValue2.setText(textfield);
            metadataValue2.setToolTipText("set metadata value");
        }
        metadataKey2.setText(label);
        metadataValue2.setText(textfield);
        metadataKey2.setBackground(new Color(239,235,231));
        metadataValue2.setBackground(new Color(239,235,231));


    }

    public String getMetadataKey() {
        return !isLarge ? metadataKey1.getText() : metadataKey2.getText();
    }

    public String getMetadataValue() {
        return !isLarge ? metadataValue1.getText() : metadataValue2.getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTextField = new javax.swing.JPanel();
        metadataValue1 = new javax.swing.JTextField();
        metadataKey1 = new javax.swing.JTextField();
        jPanelTextArea = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        metadataValue2 = new javax.swing.JTextArea();
        metadataKey2 = new javax.swing.JTextField();

        metadataValue1.setBackground(new java.awt.Color(196, 39, 157));
        metadataValue1.setForeground(new java.awt.Color(13, 9, 9));
        metadataValue1.setText(org.openide.util.NbBundle.getMessage(OneMetadataPanel.class, "OneMetadataPanel.metadataValue1.text")); // NOI18N
        metadataValue1.setDisabledTextColor(new java.awt.Color(179, 108, 32));

        metadataKey1.setForeground(new java.awt.Color(19, 11, 11));
        metadataKey1.setText(org.openide.util.NbBundle.getMessage(OneMetadataPanel.class, "OneMetadataPanel.metadataKey1.text")); // NOI18N
        metadataKey1.setBorder(null);

        javax.swing.GroupLayout jPanelTextFieldLayout = new javax.swing.GroupLayout(jPanelTextField);
        jPanelTextField.setLayout(jPanelTextFieldLayout);
        jPanelTextFieldLayout.setHorizontalGroup(
            jPanelTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTextFieldLayout.createSequentialGroup()
                .addComponent(metadataKey1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(metadataValue1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
        );
        jPanelTextFieldLayout.setVerticalGroup(
            jPanelTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 27, Short.MAX_VALUE)
            .addGroup(jPanelTextFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(metadataValue1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(metadataKey1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        metadataValue2.setColumns(20);
        metadataValue2.setRows(5);
        jScrollPane1.setViewportView(metadataValue2);

        metadataKey2.setText(org.openide.util.NbBundle.getMessage(OneMetadataPanel.class, "OneMetadataPanel.metadataKey2.text")); // NOI18N
        metadataKey2.setBorder(null);

        javax.swing.GroupLayout jPanelTextAreaLayout = new javax.swing.GroupLayout(jPanelTextArea);
        jPanelTextArea.setLayout(jPanelTextAreaLayout);
        jPanelTextAreaLayout.setHorizontalGroup(
            jPanelTextAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTextAreaLayout.createSequentialGroup()
                .addComponent(metadataKey2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
        );
        jPanelTextAreaLayout.setVerticalGroup(
            jPanelTextAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTextAreaLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(metadataKey2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelTextArea;
    private javax.swing.JPanel jPanelTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField metadataKey1;
    private javax.swing.JTextField metadataKey2;
    private javax.swing.JTextField metadataValue1;
    private javax.swing.JTextArea metadataValue2;
    // End of variables declaration//GEN-END:variables
}
