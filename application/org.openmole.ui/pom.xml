<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <!-- ************************************************************* -->
  <!-- *** POM Relationships *************************************** -->
  <!-- ************************************************************* -->
  <parent>
    <artifactId>ui</artifactId>
    <groupId>org.openmole.ui</groupId>
    <version>0.8.0-SNAPSHOT</version>
  </parent>
  <artifactId>org.openmole.ui</artifactId>
  <!-- ************************************************************* -->
  <!-- *** Build Settings ****************************************** -->
  <!-- ************************************************************* -->
  <packaging>bundle</packaging>
  <!-- ************************************************************* -->
  <!-- *** Project Information ************************************* -->
  <!-- ************************************************************* -->
  <name>${project.artifactId} ${project.version}</name>
  <description>Command line UI for OpenMole</description>
  <properties>
    <product.directory>${project.build.directory}/product</product.directory>
    <product.plugins.directory>${product.directory}/plugins/</product.plugins.directory>
    <product.configuration.directory>${product.directory}/configuration/</product.configuration.directory>
    <symbolic.name>${project.artifactId};singleton:=true</symbolic.name>
    <bundle.activationpolicy>lazy</bundle.activationpolicy>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.core.model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.core.implementation</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.core.batch</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.workspace</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.replication</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.exception</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.tools</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.eventdispatcher</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.pluginmanager</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.logging</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.openmole.misc.sftpserver</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.apache.commons.logging</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.equinox</groupId>
      <artifactId>org.eclipse.equinox.app</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- dependency added in scope provided for forcing exclusion in copy-dependencies task -->
    <dependency>
      <groupId>org.eclipse.equinox</groupId>
      <artifactId>org.eclipse.osgi</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- dependencies for the runtime -->
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>net.sourceforge.jline</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.apache.ant</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>uk.com.robustit.cloning</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.joda.time</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.scala-lang.scala-library</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.jasypt.encryption</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.apache.commons.configuration</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>org.objenesis</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openmole.core</groupId>
      <artifactId>com.github.scopt</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- IDE plugins -->
    <dependency>
      <groupId>org.openmole.ide</groupId>
      <artifactId>org.openmole.ide.core.implementation</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-bundles</id>
            <!-- should be run at install phase to be sure to get the just built artifact when copying current artifact -->
            <phase>package</phase>
            <goals>
              <!-- Will copy all dependencies into plugins directory -->
              <goal>copy-dependencies</goal>
              <!-- Will copy missing bundles into plugins directory with correct filenames for equinox launcher -->
              <goal>copy</goal>
            </goals>
            <configuration>
              <excludeScope>provided</excludeScope>
              <excludeArtifactIds>scalatest_${lib.org.scala-lang.scala.version},junit,scala-actors,scala-library,scala-reflect,scala-swing,serializer,xalan,xml-apis,commons-logging,mina-core</excludeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Will copy equinox config file into configuration directory-->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-configuration</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${product.configuration.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <includes>
                    <include>config.ini</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-launching-scripts</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${product.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <includes>
                    <include>openmole</include>
                    <include>debug.sh</include>
                    <include>openmole.bat</include>
                    <include>splashscreen.png</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>process-test-classes</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <chmod file="target/product/openmole" perm="755"></chmod>
                <chmod file="target/product/openmole.bat" perm="755"></chmod>
                <chmod file="target/product/debug.sh" perm="755"></chmod>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <id>make-assembly</id>
            <!-- this is used for inheritance merges -->
            <phase>package</phase>
            <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptor>src/main/assembly/openmole-console.xml</descriptor>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
